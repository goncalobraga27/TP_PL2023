Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> object
Rule 1     object -> LCHAVETA members RCHAVETA
Rule 2     members -> par
Rule 3     members -> par VIRG members
Rule 4     par -> STRING DOISPONTOS value
Rule 5     array -> LPR elementos RPR
Rule 6     elementos -> value
Rule 7     elementos -> value VIRG elementos
Rule 8     value -> object
Rule 9     value -> NULL
Rule 10    value -> array
Rule 11    value -> BOOL
Rule 12    value -> NUM
Rule 13    value -> STRING

Terminals, with rules where they appear

BOOL                 : 11
DOISPONTOS           : 4
LCHAVETA             : 1
LPR                  : 5
NULL                 : 9
NUM                  : 12
RCHAVETA             : 1
RPR                  : 5
STRING               : 4 13
VIRG                 : 3 7
error                : 

Nonterminals, with rules where they appear

array                : 10
elementos            : 5 7
members              : 1 3
object               : 8 0
par                  : 2 3
value                : 4 6 7

Parsing method: LALR

state 0

    (0) S' -> . object
    (1) object -> . LCHAVETA members RCHAVETA

    LCHAVETA        shift and go to state 2

    object                         shift and go to state 1

state 1

    (0) S' -> object .



state 2

    (1) object -> LCHAVETA . members RCHAVETA
    (2) members -> . par
    (3) members -> . par VIRG members
    (4) par -> . STRING DOISPONTOS value

    STRING          shift and go to state 5

    members                        shift and go to state 3
    par                            shift and go to state 4

state 3

    (1) object -> LCHAVETA members . RCHAVETA

    RCHAVETA        shift and go to state 6


state 4

    (2) members -> par .
    (3) members -> par . VIRG members

    RCHAVETA        reduce using rule 2 (members -> par .)
    VIRG            shift and go to state 7


state 5

    (4) par -> STRING . DOISPONTOS value

    DOISPONTOS      shift and go to state 8


state 6

    (1) object -> LCHAVETA members RCHAVETA .

    $end            reduce using rule 1 (object -> LCHAVETA members RCHAVETA .)
    VIRG            reduce using rule 1 (object -> LCHAVETA members RCHAVETA .)
    RCHAVETA        reduce using rule 1 (object -> LCHAVETA members RCHAVETA .)
    RPR             reduce using rule 1 (object -> LCHAVETA members RCHAVETA .)


state 7

    (3) members -> par VIRG . members
    (2) members -> . par
    (3) members -> . par VIRG members
    (4) par -> . STRING DOISPONTOS value

    STRING          shift and go to state 5

    par                            shift and go to state 4
    members                        shift and go to state 9

state 8

    (4) par -> STRING DOISPONTOS . value
    (8) value -> . object
    (9) value -> . NULL
    (10) value -> . array
    (11) value -> . BOOL
    (12) value -> . NUM
    (13) value -> . STRING
    (1) object -> . LCHAVETA members RCHAVETA
    (5) array -> . LPR elementos RPR

    NULL            shift and go to state 13
    BOOL            shift and go to state 15
    NUM             shift and go to state 16
    STRING          shift and go to state 10
    LCHAVETA        shift and go to state 2
    LPR             shift and go to state 17

    value                          shift and go to state 11
    object                         shift and go to state 12
    array                          shift and go to state 14

state 9

    (3) members -> par VIRG members .

    RCHAVETA        reduce using rule 3 (members -> par VIRG members .)


state 10

    (13) value -> STRING .

    VIRG            reduce using rule 13 (value -> STRING .)
    RCHAVETA        reduce using rule 13 (value -> STRING .)
    RPR             reduce using rule 13 (value -> STRING .)


state 11

    (4) par -> STRING DOISPONTOS value .

    VIRG            reduce using rule 4 (par -> STRING DOISPONTOS value .)
    RCHAVETA        reduce using rule 4 (par -> STRING DOISPONTOS value .)


state 12

    (8) value -> object .

    VIRG            reduce using rule 8 (value -> object .)
    RCHAVETA        reduce using rule 8 (value -> object .)
    RPR             reduce using rule 8 (value -> object .)


state 13

    (9) value -> NULL .

    VIRG            reduce using rule 9 (value -> NULL .)
    RCHAVETA        reduce using rule 9 (value -> NULL .)
    RPR             reduce using rule 9 (value -> NULL .)


state 14

    (10) value -> array .

    VIRG            reduce using rule 10 (value -> array .)
    RCHAVETA        reduce using rule 10 (value -> array .)
    RPR             reduce using rule 10 (value -> array .)


state 15

    (11) value -> BOOL .

    VIRG            reduce using rule 11 (value -> BOOL .)
    RCHAVETA        reduce using rule 11 (value -> BOOL .)
    RPR             reduce using rule 11 (value -> BOOL .)


state 16

    (12) value -> NUM .

    VIRG            reduce using rule 12 (value -> NUM .)
    RCHAVETA        reduce using rule 12 (value -> NUM .)
    RPR             reduce using rule 12 (value -> NUM .)


state 17

    (5) array -> LPR . elementos RPR
    (6) elementos -> . value
    (7) elementos -> . value VIRG elementos
    (8) value -> . object
    (9) value -> . NULL
    (10) value -> . array
    (11) value -> . BOOL
    (12) value -> . NUM
    (13) value -> . STRING
    (1) object -> . LCHAVETA members RCHAVETA
    (5) array -> . LPR elementos RPR

    NULL            shift and go to state 13
    BOOL            shift and go to state 15
    NUM             shift and go to state 16
    STRING          shift and go to state 10
    LCHAVETA        shift and go to state 2
    LPR             shift and go to state 17

    elementos                      shift and go to state 18
    value                          shift and go to state 19
    object                         shift and go to state 12
    array                          shift and go to state 14

state 18

    (5) array -> LPR elementos . RPR

    RPR             shift and go to state 20


state 19

    (6) elementos -> value .
    (7) elementos -> value . VIRG elementos

    RPR             reduce using rule 6 (elementos -> value .)
    VIRG            shift and go to state 21


state 20

    (5) array -> LPR elementos RPR .

    VIRG            reduce using rule 5 (array -> LPR elementos RPR .)
    RCHAVETA        reduce using rule 5 (array -> LPR elementos RPR .)
    RPR             reduce using rule 5 (array -> LPR elementos RPR .)


state 21

    (7) elementos -> value VIRG . elementos
    (6) elementos -> . value
    (7) elementos -> . value VIRG elementos
    (8) value -> . object
    (9) value -> . NULL
    (10) value -> . array
    (11) value -> . BOOL
    (12) value -> . NUM
    (13) value -> . STRING
    (1) object -> . LCHAVETA members RCHAVETA
    (5) array -> . LPR elementos RPR

    NULL            shift and go to state 13
    BOOL            shift and go to state 15
    NUM             shift and go to state 16
    STRING          shift and go to state 10
    LCHAVETA        shift and go to state 2
    LPR             shift and go to state 17

    value                          shift and go to state 19
    elementos                      shift and go to state 22
    object                         shift and go to state 12
    array                          shift and go to state 14

state 22

    (7) elementos -> value VIRG elementos .

    RPR             reduce using rule 7 (elementos -> value VIRG elementos .)

